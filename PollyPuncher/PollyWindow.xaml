<Window x:Class="PollyPuncher.PollyWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource MaterialDesignPaper}"
        TextElement.FontWeight="Medium"
        TextElement.FontSize="14"
        FontFamily="{materialDesign:MaterialDesignFont}"
        xmlns:local="clr-namespace:PollyPuncher"
        mc:Ignorable="d"
        Closing="PollyWindow_OnClosing"
        Title="PollyWindow" Height="450" Width="800">
    
    <Window.Resources>
        <RoutedUICommand x:Key="PlayHotkey" Text="Text" />
        
        <Style x:Key="AudioSelect" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
             <Setter Property="HorizontalAlignment" Value="Stretch"/>
             <Setter Property="VerticalAlignment" Value="Stretch"/>
             <Setter Property="Margin" Value="5"/>
             <Setter Property="Padding" Value="4"/>
             <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="VolumeSlider" TargetType="Slider" BasedOn="{StaticResource MaterialDesignSlider}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="3"/> 
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TickPlacement" Value="Both"/>
            <Setter Property="Ticks" Value="0,10,20,30,40,50,60,70,80,90,100"/>
        </Style>
        <Style x:Key="VoiceSelect" TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="TtsBox" TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="AcceptsTab" Value="True"/>
            <Setter Property="materialDesign:TextFieldAssist.RippleOnFocusEnabled" Value="False"/>
        </Style>
        <Style x:Key="HeaderLabel" TargetType="Label">
            <Setter Property="Margin" Value="0.5,3,3,0.25"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
        </Style>
        <Style x:Key="ActionButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignOutlinedButton}">
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Padding" Value="4"/>
            <!--<Setter Property="VerticalContentAlignment" Value="Center"/>-->
        </Style>
        
        <Style x:Key="KeyButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
            <Setter Property="Width" Value="60"></Setter>
            <Setter Property="Height" Value="60"></Setter>
        </Style>
        
        <Style x:Key="HelpButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignOutlinedButton}">
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="2"/>
        </Style>
        
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="{StaticResource PlayHotkey}" 
                        Executed="PlayHotKey_Executed" />
    </Window.CommandBindings>

    <Window.InputBindings>
        <KeyBinding Key="P" Modifiers="Ctrl" Command="{StaticResource PlayHotkey}"/>
    </Window.InputBindings>

    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="2*" />
            <RowDefinition Height="4*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <!-- Comment  -->
        <Grid Grid.Row="0" x:Name="VolumeGrid">
            <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="8*" />
                </Grid.ColumnDefinitions>
            <Grid x:Name="KeySelectGrid" Grid.Column="0">
                <Button x:Name="KeyOpenButton" Click="BtnKeyFileOpen_Click" Style="{StaticResource KeyButton}" 
                        ToolTip="Click here to select a AWS-Keyfile. The App doesn't work without the Key. More info is found in the README. ">
                    <materialDesign:PackIcon Kind="Key"/>
                </Button>
            </Grid>
            <Grid x:Name="AudioPanelGrid" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="1*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*" />
                    <ColumnDefinition Width="4*" />
                </Grid.ColumnDefinitions>
                <Slider Grid.Row="0" Grid.Column="0" Value="{Binding Path=AudioProps.VolumeA}" Minimum="0" Maximum="100" 
                        Style="{StaticResource VolumeSlider}" ToolTip="Output-Volume for Device A - in % of System-Set Volume"/>
                <Slider Grid.Row="1" Grid.Column="0"  Value="{Binding Path=AudioProps.VolumeB}" Minimum="0" Maximum="100" 
                        Style="{StaticResource VolumeSlider}" ToolTip="Output-Volume for Device B - in % of System-Set Volume"/>
                <ComboBox Grid.Row="0" Grid.Column="1" SelectedIndex="{Binding AudioProps.DeviceA}" 
                          ItemsSource="{Binding Path=AudioProps.DeviceNames}" Style="{StaticResource AudioSelect}" 
                          ToolTip="Select an audio-device to play the sound."/>
                <ComboBox Grid.Row="1" Grid.Column="1" SelectedIndex="{Binding AudioProps.DeviceB}" 
                          ItemsSource="{Binding Path=AudioProps.DeviceNames}" Style="{StaticResource AudioSelect}" 
                          ToolTip="Select an audio-device to play the sound. Set to DeviceA to ignore this field."/>
            </Grid>
        </Grid>
        
        <Grid x:Name="TextGrid" Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="8*" />
                <ColumnDefinition Width="4*" />
            </Grid.ColumnDefinitions>
            
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*" />
                    <RowDefinition Height="8*" />
                </Grid.RowDefinitions>
                <Label Grid.Row="0" Style="{StaticResource HeaderLabel}">Enter your Text below</Label>
                <TextBox Grid.Row="1" x:Name="TextToSound" 
                         Text="{Binding PollyProps.TextToPlay, UpdateSourceTrigger=PropertyChanged, 
                         Mode=TwoWay, IsAsync=True}"
                         Style="{StaticResource TtsBox}"/>
            </Grid>
            
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="1.5*" />
                    <RowDefinition Height="2*" />
                    <RowDefinition Height="1.5*" />
                    <RowDefinition Height="2*" />
                </Grid.RowDefinitions>
                <!-- There is currently no help needed.
                <Button Grid.Row="0" Style="{StaticResource HelpButton}" ToolTip="Show some Information"> Help </Button>
                -->
                <Label Grid.Row="0" Style="{StaticResource HeaderLabel}">Voice:</Label>
                <ComboBox Grid.Row="1" ItemsSource="{Binding Path = PollyProps.Voices}" SelectedValue="{Binding Path = PollyProps.Voice}" 
                          Style="{StaticResource VoiceSelect}" ToolTip="The Amazon Voice to be selected. Best ones are Hans (default german) and Brian (default english)."/>
                <Label Grid.Row="2" Style="{StaticResource HeaderLabel}">Sampling-Rate:</Label>
                <!-- TODO: Inspect why Sampling Rate 32k is not working! -->
                <Slider Grid.Row="3" Value="{Binding Path=PollyProps.SamplingRate}" TickPlacement="BottomRight" IsSnapToTickEnabled="True" 
                        Ticks="4000,8000,16000" Minimum="4000" Maximum="16000" VerticalAlignment="Center" ToolTip="The sampling rate for the audio - high means 'smoother' and is recommended."/>
                
                <Button Grid.Row="4" x:Name="HistoryBackwardButton" Click="HistoryBackwardButton_OnClick"
                        Style="{StaticResource MaterialDesignFlatButton}" ToolTip="Go to back in Sound-History"> Last </Button>
                <Button Grid.Row="5" x:Name="HistoryForwardButton" Click="HistoryForwardButton_OnClick"
                        Style="{StaticResource MaterialDesignFlatButton}" ToolTip="Go forth in Sound-History"> Next </Button>
                
            </Grid>
        </Grid>
        
        <Grid Grid.Row="2" x:Name="OperationGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>
            <Button Grid.Column="1" x:Name="PlayButton" Click="PlayButton_OnClick" Style="{StaticResource ActionButton}" 
                    ToolTip="Play the sound to the selected Audio-Devices (Keyboard Ctrl+P)">Play</Button>
            <Button Grid.Column="2" x:Name="SaveButton" Click="SaveButton_OnClick" Style="{StaticResource ActionButton}"
                    ToolTip="Save the sound to a chosen file. Only .mp3 is supported.">Save</Button>
        </Grid>
        
    </Grid>
</Window>
